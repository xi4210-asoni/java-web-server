pipeline:
  name: CIFService
  identifier: CIFService
  projectIdentifier: DemoCICD
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - parallel:
                  - step:
                      type: ShellScript
                      name: Build_Shell_Script
                      identifier: Build_Shell_Script
                      spec:
                        shell: Bash
                        onDelegate: true
                        delegateSelectors:
                          - helm-delegate
                        source:
                          type: Inline
                          spec:
                            script: echo "$PATH"
                        environmentVariables: []
                        outputVariables: []
                      timeout: 10m
                  - stepGroup:
                      name: AdditionalStep
                      identifier: AdditionalStep
                      steps:
                        - step:
                            type: ShellScript
                            name: ShellScript_2
                            identifier: ShellScript_2
                            spec:
                              shell: Bash
                              onDelegate: true
                              source:
                                type: Inline
                                spec:
                                  script: date
                              environmentVariables: []
                              outputVariables: []
                              delegateSelectors:
                                - helm-delegate
                            timeout: 10m
              - step:
                  type: Container
                  name: Container_1
                  identifier: Container_1
                  spec:
                    connectorRef: account.harnessImage
                    image: nginx
                    command: echo "Hello World"
                    shell: Bash
                    infrastructure:
                      type: KubernetesDirect
                      spec:
                        connectorRef: KubernetesSetup
                        namespace: harness-test
                        resources:
                          limits:
                            cpu: "0.5"
                            memory: 500Mi
                        annotations: {}
                        labels: {}
                        containerSecurityContext:
                          capabilities:
                            drop: []
                            add: []
                        nodeSelector: {}
                    outputVariables: []
                    envVariables: {}
                  timeout: 10s
        tags: {}
        delegateSelectors:
          - helm-delegate
    - stage:
        name: Approval-CI-Done
        identifier: ApprovalCIDone
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: ManualApproval
                  identifier: ManualApproval
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
        tags: {}
    - stage:
        name: FinalDeploy
        identifier: FinalDeploy
        description: ""
        type: Deployment
        spec:
          deploymentType: NativeHelm
          service:
            serviceRef: NewService
          execution:
            steps:
              - step:
                  name: Helm Deployment
                  identifier: helmDeployment
                  type: HelmDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    ignoreReleaseHistFailStatus: true
                    delegateSelectors:
                      - helm-delegate
                    skipSteadyStateCheck: true
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: StageRollback
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  type: HelmRollback
                  timeout: 10m
                  spec: {}
          environment:
            environmentRef: TestEnv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: DemoInfrastructure
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
